{{- if and (not .Values.global.auth.backend.existingSecret) .Values.global.auth.backend.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-auth" .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: backstage
    {{- if .Values.upstream.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.upstream.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.upstream.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.upstream.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
type: Opaque
data:
  backend-secret: {{ (ternary  (randAlphaNum 24 ) .Values.global.auth.backend.value (empty .Values.global.auth.backend.value)) | b64enc | quote }}
{{- end }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: backstage-read-only
  namespace: developer-hub  
rules:
  - apiGroups: [""]
    resources:
      - pods
      - services
      - endpoints
      - configmaps
      - secrets
    verbs: ["get", "list", "watch"]

  - apiGroups: ["apps"]
    resources:
      - deployments
      - replicasets
    verbs: ["get", "list", "watch"]

  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]

  - apiGroups: ["route.openshift.io"]
    resources:
      - routes
    verbs: ["get", "list", "watch"]

  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - roles
      - rolebindings
    verbs: ["get", "list", "watch"]

  - apiGroups: [""]
    resources:
      - serviceaccounts
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backstage-read-only
  namespace: developer-hub
---
kind: Secret
apiVersion: v1
metadata:
  name: backstage-read-only
  annotations:
    kubernetes.io/service-account.name: backstage-read-only  
type: kubernetes.io/service-account-token  
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'backstage-read-only'
  namespace: developer-hub
subjects:
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: 'system:serviceaccount:developer-hub:backstage-read-only'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backstage-read-only