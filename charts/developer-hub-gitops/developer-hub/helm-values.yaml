redhat-developer-hub:
  nameOverride: developer-hub

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ephemeral

  global:
    auth:
      backend:
        enabled: true
    clusterRouterBase: apps.shrocp4upi418ovn.lab.upshift.rdu2.redhat.com
    dynamic:
      includes:
        - dynamic-plugins.default.yaml
      plugins:
        - disabled: false
          package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-tekton
        - disabled: false
          package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
        - disabled: false
          package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic

  route:
    enabled: true
    host: '{{ .Values.global.host }}'
    path: /
    tls:
      enabled: true
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    wildcardPolicy: None

  upstream:
    backstage:
      appConfig:
        app:
          baseUrl: 'https://{{- include "janus-idp.hostname" . }}'
        backend:
          auth:
            externalAccess:
              - options:
                  secret: '${BACKEND_SECRET}'
                  subject: legacy-default-config
                type: legacy
          baseUrl: 'https://{{- include "janus-idp.hostname" . }}'
          cors:
            origin: 'https://{{- include "janus-idp.hostname" . }}'
          database:
            connection:
              password: '${POSTGRESQL_ADMIN_PASSWORD}'
              user: postgres
      args:
        - '--config'
        - dynamic-plugins-root/app-config.dynamic-plugins.yaml
      containerPorts:
        backend: 7007
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      extraEnvVars:
        - name: BACKEND_SECRET
          valueFrom:
            secretKeyRef:
              key: backend-secret
              name: '{{ include "janus-idp.backend-secret-name" $ }}'
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: '{{- include "janus-idp.postgresql.secretName" . }}'
      extraVolumeMounts:
        - mountPath: /opt/app-root/src/dynamic-plugins-root
          name: dynamic-plugins-root
        - mountPath: /tmp
          name: temp
        - mountPath: /opt/app-root/src/storage
          name: persistent-storage
      extraVolumes:
        - name: dynamic-plugins-root
          persistentVolumeClaim:
            claimName: rhdh-storage-plugins-pvc
        - name: dynamic-plugins
          configMap:
            defaultMode: 420
            name: '{{ printf "%s-dynamic-plugins" .Release.Name }}'
            optional: true
        - name: dynamic-plugins-npmrc
          secret:
            defaultMode: 420
            optional: true
            secretName: '{{ printf "%s-dynamic-plugins-npmrc" .Release.Name }}'
        - name: dynamic-plugins-registry-auth
          secret:
            defaultMode: 416
            optional: true
            secretName: '{{ printf "%s-dynamic-plugins-registry-auth" .Release.Name }}'
        - name: npmcacache
        - name: temp
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: rhdh-storage-pvc
      image:
        pullPolicy: Always
        registry: registry.redhat.io
        repository: rhdh/rhdh-hub-rhel9@sha256
        tag: 9fd11a4551da42349809bbf34eb54c3b0ca8a3884d556593656af79e72786c01
      initContainers:
        - command:
            - ./install-dynamic-plugins.sh
            - /dynamic-plugins-root
          env:
            - name: NPM_CONFIG_USERCONFIG
              value: /opt/app-root/src/.npmrc.dynamic-plugins
          image: '{{ include "backstage.image" . }}'
          imagePullPolicy: Always
          name: install-dynamic-plugins
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 5Gi
              memory: 2.5Gi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /dynamic-plugins-root
              name: dynamic-plugins-root
            - mountPath: /opt/app-root/src/dynamic-plugins.yaml
              name: dynamic-plugins
              readOnly: true
              subPath: dynamic-plugins.yaml
            - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
              name: dynamic-plugins-npmrc
              readOnly: true
              subPath: .npmrc
            - mountPath: /opt/app-root/src/.config/containers
              name: dynamic-plugins-registry-auth
              readOnly: true
            - mountPath: /opt/app-root/src/.npm/_cacache
              name: npmcacache
            - mountPath: /tmp
              name: temp
          workingDir: /opt/app-root/src
      installDir: /opt/app-root/src
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          ephemeral-storage: 5Gi
          memory: 2.5Gi
        requests:
          cpu: 250m
          memory: 1Gi

  postgresql:
    enabled: true
    auth:
      secretKeys:
        adminPasswordKey: postgres-password
        userPasswordKey: password
    primary:
      persistence:
        enabled: false
    volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: data
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: postgres-pvc
  test:
    enabled: true
    image:
      registry: quay.io
      repository: curl/curl
      tag: latest